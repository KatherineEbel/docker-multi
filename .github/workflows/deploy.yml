name: Deploy to ElasticBeanstalk
on:
  push:
    branches:
      - main

jobs:
  test-client:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ 16.x ]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - name: npm ci, build and test
        working-directory: ./client
        run: |
          npm ci
          npm test
  publish:
    strategy:
      matrix:
        service: [client, server, nginx, worker]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Latest Repo
        uses: actions/checkout@master

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: "{{defaultContext}}:${{ matrix.service }}"
          push: true
          tags: ${{ secrets.DOCKER_USERNAME}}/multi-${{ matrix.service }}:latest

  deploy:
    needs: [publish]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Latest Repo
        uses: actions/checkout@master
      - name: Get Timestamp
        uses: gerred/actions/current-time@master
        id: current-time
#
      - name: Run String Replace
        uses: frabert/replace-string-action@master
        id: format-time
        with:
          pattern: '[:\.]+'
          string: "${{ steps.current-time.outputs.time }}"
          replace-with: '-'
          flags: 'g'
      - name: Generate Deployment Package
        run: zip -r deploy.zip * -x "**node_modules**"

      - name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v16
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: multi-docker
          environment_name: Multidocker-env
          version_label: "multi-docker-${{ steps.format-time.outputs.replaced }}"
          region: us-east-1
          deployment_package: deploy.zip
          use_existing_version_if_available: true